{% extends "patient/master.html.twig" %}
{% block title %}Account
{% endblock title %}
{% block addHead %}

	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0-rc.1/dist/chartjs-plugin-datalabels.min.js" 
integrity="sha256-Oq8QGQ+hs3Sw1AeP0WhZB7nkjx6F1LxsX6dCAsyAiA4=" crossorigin="anonymous"></script>

	<script>


		var colours = [
					'rgba(255, 99, 132, 0.8)',
					'rgba(54, 162, 235, 0.8)',
					'rgba(255, 206, 86, 0.8)',
					'rgba(75, 192, 192, 0.8)',
					'rgba(153, 102, 255, 0.8)',
					'rgba(255, 159, 64, 0.8)'
            ];

	var fontSize = 16;
	Chart.defaults.font.size = 14;
	Chart.register(ChartDataLabels);
	
	// var currTime = new Date().toTimeString();
	// document.getElementById("currTime").innerHTML = currTime;
	 $(document).ready(function () {
		 document.getElementById("today").innerHTML = new Date().toDateString();
		 	    $.ajax({
                url: '/patient/account/api',
                type: 'GET',
                dataType: 'json'
            }).done(function (stats) {
				if(stats) {
					if(stats.activeStatus == "ACTIVE"){
						$("#notInQueue").hide();
						$("#walkinCard").show();
						$("#position").html("Current Position in Queue: " + stats.position);
						$("#walkinWaitTime").html("Average Wait Time: " + stats.walkinWaitTime + " minutes");
						$("#walkinDesc").html(stats.description);
					}else {
						$("#position").html("You are no longer in the walkin queue.");
						$("#walkinWaitTime").html("You waited: " + stats.patientWaitTime + " minutes");
						$("#notInQueue").hide();
					}
				}
				else{
					$("#notInQueue").show();
					$("#walkinCard").hide();


				}
            });

			$.ajax({
			url: '/patient/account/api/chart', 
			type: 'GET', 
			dataType: 'json'
			}).done(function (values) {
				if(values){
						var element = 'appointmentTypes';
						var message ='Overall Breakdown of My Scheduled Appointment Types';
						appointmentTypes(values, message, element);
				}else {
					$("#appointmentTypes").hide();
				}

			});

			$.ajax({
			url: '/patient/account/api/walkinchart', 
			type: 'GET', 
			dataType: 'json'
			}).done(function (values) {
				if(values){
					var element = 'walkinTypes';
					var message ='Overall Breakdown of My Walkin Appointment Types';
					appointmentTypes(values, message, element);
				}else {
					$("#walkinTypes").hide();
				}

			});
	 });


	 function refresh() {

		 	    $.ajax({
                url: '/patient/account/api',
                type: 'GET',
                dataType: 'json'
            }).done(function (stats) {
				if(stats) {
					if(stats.activeStatus == "ACTIVE"){
						$("#notInQueue").hide();
						$("#walkinCard").show();
						$("#position").html("Current Position in Queue: " + stats.position);
						$("#walkinWaitTime").html("Average Wait Time: " + stats.walkinWaitTime + " minutes");
						$("#walkinDesc").html(stats.description);
					}else {
						$("#position").html("You are no longer in the walkin queue.");
						$("#walkinWaitTime").html("You waited: " + stats.patientWaitTime + " minutes");
						$("#notInQueue").hide();
					}
				}
				else{
					$("#notInQueue").show();
					$("#walkinCard").hide();


				}
            });
	 }

	 function appointmentTypes(values, message, element) {
		
			let labels = [];
			let counts = [];
			for (let i = 0; i < values.length; i++) {
			let row = values[i];
			labels.push(row['appointmentType']);
			counts.push(row['count'])
			}
			const data = {
			labels: labels,
			datasets: [
						{
					label: 'My Appointment Types',
					backgroundColor: colours,
				data: counts
				}
			]
			};
				const config = {
				type: 'doughnut',
				data: data,
				options: {
					plugins: {
						title: {
							display: true,
							position: 'top',
							text: message,
							font: {
							size: fontSize,
							weight: 'bold'
						}
						},
						legend: {
						position: 'bottom'
						}
					}
				}
			};
			const myChart = new Chart(document.getElementById(element), config);
		}
	</script>


{% endblock addHead %}
{% block header %}{% endblock %}
{% block content %}



	<div class="container  bg-light p-4">
	

		
	<div class="row">
	
		<div class="col-6">
		<h3>My Walkin Appointment for Today:</h3>
		<h3><span id="today"></span></h3>
		{# {% if walkin %} #}
			<div class="p-4" id="walkinCard">
					<div class="card m-4">
						<div class="card-header">
								Walkin
								{# <div><a href="/patient/updatewalkin">Update Info</a></div> #}
							</div>
							<div class="card-body">
								<h5 class="card-title" id="position"></h5>
								<h5 class="card-title" id="walkinWaitTime"></h5>
								<p class="card-text"><em id="walkinDesc"></em></p>
								{# <button id="button" onclick="refresh()" class="btn btn-primary">Refresh</button> #}
								<label type="button" class="btn btn-primary btn-block" onclick="refresh()">Refresh</label>
							</div>			
					</div>
			</div>
			{# {% else %} #}
			<div id="notInQueue">
			<h5 class>You are not registered for today's Walkin Clinic. </h5>
			<p>Registration is from 8am to 3pm on weekdays. <a href="/patient/walkinregister">Register here</a></p>
			</div>
					<h3>My Upcoming Family Doctor Appointments</h3>
		
		{% if records %}
			<div class="p-4">
				{% for row in records %}
					<div class="card m-4">
						<div class="card-header">
							{% if row.type == 'virtual' or row.type == 'face to face'%}
								Appointment on {{row.date}} at {{row.time}}
							</div>
							<div class="card-body">
								<h5 class="card-title">Appointment with Dr. {{row.firstName}} {{row.lastName}}</h5>
								<h6 class="card-text"><i>{{row.type}}</i></h6>
								<p class="card-text"><em>{{row.description}}</em></p>
								
							</div>
						{% endif %}
					</div>
				{% endfor %}
			</div>
		{% endif %}
		</div>
		<div class="col-6">
			<canvas id="walkinTypes" class="p-4"></canvas>
			<canvas id="appointmentTypes" class="p-4"></canvas>
		</div>
		<div class="col-6">
	</div>
		{# <div class="col-6 ">
			
		</div> #}
	</div>
		{# {% endif %} #}

	


	






	</div>


	{% endblock content %}
	{% block footer %}{% endblock footer %}
